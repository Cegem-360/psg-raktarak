class l{constructor(){this.map=null,this.markers=[],this.geocoder=null,this.isGoogleMapsLoaded=!1,this.mapInitialized=!1,this.geocodingCache=new Map}async initializeGoogleMaps(e,t,o,s=null){if(!e){this.showMapError("Google Maps API kulcs nincs konfigur√°lva. K√©rj√ºk, √°ll√≠tsa be a GOOGLE_MAPS_API_KEY k√∂rnyezeti v√°ltoz√≥t.");return}if(!s){this.showMapError("Google Maps Map ID nincs konfigur√°lva. K√©rj√ºk, √°ll√≠tsa be a GOOGLE_MAPS_MAP_ID k√∂rnyezeti v√°ltoz√≥t.");return}if(this.mapId=s,window.google&&window.google.maps){this.initMap(t,o);return}if(!this.isGoogleMapsLoaded)return this.isGoogleMapsLoaded=!0,new Promise((r,i)=>{const a=document.createElement("script");a.src=`https://maps.googleapis.com/maps/api/js?key=${e}&callback=initGoogleMapsCallback&v=weekly&loading=async&libraries=marker`,a.async=!0,a.defer=!0,a.onerror=()=>{this.showMapError("Google Maps bet√∂lt√©se sikertelen. Ellen≈ërizze az API kulcsot √©s a h√°l√≥zati kapcsolatot."),i(new Error("Google Maps loading failed"))},window.initGoogleMapsCallback=()=>{this.initMap(t,o),r()},document.head.appendChild(a)})}initMap(e,t){if(this.mapInitialized){t&&t();return}try{const o=document.getElementById(e);if(!o){console.error(`Map element with ID '${e}' not found`),this.showMapError("T√©rk√©p kont√©ner nem tal√°lhat√≥. K√©rj√ºk, friss√≠tse az oldalt.");return}const s={lat:47.4979,lng:19.0402},r=11;this.map=new google.maps.Map(o,{zoom:r,center:s,gestureHandling:"cooperative",zoomControl:!0,mapTypeControl:!1,scaleControl:!0,streetViewControl:!1,rotateControl:!1,fullscreenControl:!0,mapTypeId:"roadmap",mapId:this.mapId}),this.geocoder=new google.maps.Geocoder,this.mapInitialized=!0,this.hideMapPlaceholder(),t&&t()}catch(o){console.error("Error initializing map:",o),this.showMapError("T√©rk√©p inicializ√°l√°sa sikertelen.")}}async geocodeAddress(e){if(!this.geocoder)throw new Error("Geocoder not initialized");return this.geocodingCache.has(e)?this.geocodingCache.get(e):new Promise((t,o)=>{this.geocoder.geocode({address:e+", Hungary",region:"HU"},(s,r)=>{if(r==="OK"&&s[0]){const i=s[0].geometry.location,a={lat:i.lat(),lng:i.lng()};this.geocodingCache.set(e,a),t(a)}else console.warn("Geocoding failed for address:",e,"Status:",r),o(new Error(`Geocoding failed: ${r}`))})})}clearMarkers(){this.markers.forEach(e=>{e.map&&(e.map=null)}),this.markers=[]}addMarker(e,t,o,s=!1){if(!this.map)return null;const r=new google.maps.marker.AdvancedMarkerElement({position:e,map:this.map,title:t});if(o){const i=new google.maps.InfoWindow({content:o,maxWidth:300});r.addListener("click",()=>{this.markers.forEach(a=>{a.infoWindow&&a.infoWindow.close()}),i.open(this.map,r)}),r.infoWindow=i}return this.markers.push(r),r}fitMarkersToView(){if(!(!this.map||this.markers.length===0))if(this.markers.length===1)this.map.setCenter(this.markers[0].position),this.map.setZoom(14);else{const e=new google.maps.LatLngBounds;this.markers.forEach(t=>{e.extend(t.position)}),this.map.fitBounds(e),google.maps.event.addListenerOnce(this.map,"bounds_changed",()=>{this.map.getZoom()>15&&this.map.setZoom(15)})}}createInfoWindowContent(e){return`
            <div class="p-3 max-w-sm">
                <h3 class="font-semibold text-lg mb-2 text-gray-900">${e.title}</h3>
                <p class="text-sm text-gray-600 mb-2">üìç ${e.address}</p>
                ${e.rent?`<p class="text-sm text-gray-600 mb-1">üí∞ ${e.rent}</p>`:""}
                ${e.operating_fee?`<p class="text-sm text-gray-600 mb-3">üè¢ ${e.operating_fee}</p>`:""}
                <a href="${e.url}" 
                   class="inline-block bg-blue-600 text-white px-4 py-2 rounded-lg text-sm font-medium hover:bg-blue-700 transition-colors">
                    R√©szletek megtekint√©se
                </a>
            </div>
        `}updateMapPlaceholder(e){const t=document.getElementById("map-placeholder");if(t){t.style.display="flex";const o=t.querySelector("p");o&&(o.textContent=e)}}hideMapPlaceholder(){const e=document.getElementById("map-placeholder");e&&(e.style.display="none")}showMapMessage(e){this.updateMapPlaceholder(e);const t=document.getElementById("map-placeholder");t&&(t.style.display="flex")}showMapError(e){const t=document.getElementById("map"),o=document.getElementById("map-error"),s=document.getElementById("map-error-message");t&&(t.style.display="none"),o&&(o.classList.remove("hidden"),o.classList.add("flex")),s&&(s.textContent=e),console.error("Google Maps Error:",e)}}export{l as G};
